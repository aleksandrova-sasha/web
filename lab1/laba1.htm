<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Задание 1</title>
<LINK rel=stylesheet type="text/css" href="style.css">
<LINK rel=stylesheet type="text/css" href="normalize.css">
</head>
<body>
<address>Источник: <a href="https://ru.wikipedia.org/wiki/Java">Википедия</a></address>
<h1>Java</h1>
<p style="text-align:center"><img src="logo.png" height="120" width="80"></p>
<p>
  <blockquote><small>«Эта статья — о языке программирования. О прикладной платформе на основе данного языка см. Java (программная платформа).» </small></blockquote>
  <p><blockquote><small>Не следует путать с JavaScript.</small></blockquote>
</p>
<div>
<h2>Содержание</h2>
<ol>
    <li><a href="#history">История создания</a></li>
    <li><a href="#view">Краткий обзор языка</a></li>
    <li><a href="#ex">Примеры кода</a></li>
</ol>
</div>
<hr>
<h2 id = "history"; >История создания</h2>
<p>Изначально язык назывался Oak («Дуб»), разрабатывался Джеймсом Гослингом для программирования бытовых электронных устройств. Из-за того, что язык с таким названием уже существовал, Oak был переименован в Java. Назван в честь марки кофе Java, которая, в свою очередь, получила наименование одноимённого острова (Ява), поэтому на официальной эмблеме языка изображена чашка с горячим кофе.
<p>
Существует и другая версия происхождения названия языка, связанная с аллюзией на кофемашину как пример бытового устройства, для программирования которого изначально язык создавался. В соответствии с этимологией в русскоязычной литературе с конца двадцатого и до первых лет двадцать первого века название языка нередко переводилось как Ява, а не транскрибировалось.
<p>
В результате работы проекта мир увидел принципиально новое устройство, карманный персональный компьютер Star7, который опередил своё время более чем на 10 лет, но из-за большой стоимости в 50 долларов не смог произвести переворот в мире технологии и был забыт.
<p>
Устройство Star7 не пользовалось популярностью, в отличие от языка программирования Java и его окружения. Следующим этапом жизни языка стала разработка интерактивного телевидения. В 1994 году стало очевидным, что интерактивное телевидение было ошибкой.
<p>
<table>
<tr>
<td>
<i>С середины 1990-х годов язык стал широко использоваться для написания клиентских приложений и серверного программного обеспечения. Тогда же определённое распространение получила технология Java-апплетов — графических Java-приложений, встраиваемых в веб-страницы; с развитием возможностей динамических веб-страниц в 2000-е годы технология стала применяться редко.
</i>
</tr>
</td>
</table>
<p><b>Внутри Java существует несколько основных семейств технологий:
</b>
<p>
<ul class = 'mark'>
<li>Java SE — Java Standard Edition, основное издание Java, содержит компиляторы, API, Java Runtime Environment; подходит для создания пользовательских приложений, в первую очередь — для настольных систем.</li>
<li>Java EE — Java Enterprise Edition, представляет собой набор спецификаций для создания программного обеспечения уровня предприятия. В 2017-м проект Java EE был передан Eclipse Foundation, после чего был переименован в Jakarta EE. Модули Java EE удалены из Java SE начиная с 11-й версии.</li>
<li>Java ME — Java Micro Edition, создана для использования в устройствах, ограниченных по вычислительной мощности, например, в мобильных телефонах, КПК, встроенных системах.</li>
<li>Java Card — технология предоставляет безопасную среду для приложений, работающих на смарт-картах и других устройствах с очень ограниченным объёмом памяти и возможностями обработки.</li>
</ul>
</p>

<h2 id = "view">Краткий обзор языка</h2>
<p>Программы на Java транслируются в байт-код Java, выполняемый виртуальной машиной Java (JVM) — программой, обрабатывающей байтовый код и передающей инструкции оборудованию как интерпретатор.
</p>
<p>Достоинством подобного способа выполнения программ является полная независимость байт-кода от операционной системы и оборудования, что позволяет выполнять Java-приложения на любом устройстве, для которого существует соответствующая виртуальная машина. Другой важной особенностью технологии Java является гибкая система безопасности, в рамках которой исполнение программы полностью контролируется виртуальной машиной. Любые операции, которые превышают установленные полномочия программы (например, попытка несанкционированного доступа к данным или соединения с другим компьютером), вызывают немедленное прерывание.
</p>
<p>Часто к недостаткам концепции виртуальной машины относят снижение производительности. Ряд усовершенствований несколько увеличил скорость выполнения программ на Java:
</p>
<ul>
<li>применение технологии трансляции байт-кода в машинный код непосредственно во время работы программы (JIT-технология) с возможностью сохранения версий класса в машинном коде,</li>
  <li>обширное использование платформенно-ориентированного кода (native-код) в стандартных библиотеках,</li>
 <li>аппаратные средства, обеспечивающие ускоренную обработку байт-кода (например, технология Jazelle, поддерживаемая некоторыми процессорами архитектуры ARM).</li>

</ul>
<p> По данным сайта shootout.alioth.debian.org, для семи разных задач время выполнения на Java составляет в среднем в полтора-два раза больше, чем для C/C++, в некоторых случаях Java быстрее, а в отдельных случаях в 7 раз медленнее. С другой стороны, для большинства из них потребление памяти Java-машиной было в 10—30 раз больше, чем программой на C/C++. Также примечательно исследование, проведённое компанией Google, согласно которому отмечается существенно более низкая производительность и бо́льшее потребление памяти в тестовых примерах на Java в сравнении с аналогичными программами на C++. </p>
</p>

<p>
Идеи, заложенные в концепцию и различные реализации среды виртуальной машины Java, вдохновили множество энтузиастов на расширение перечня языков, которые могли бы быть использованы для создания программ, исполняемых на виртуальной машине. Эти идеи нашли также выражение в спецификации общеязыковой инфраструктуры CLI, заложенной в основу платформы .NET компанией Microsoft.
</p>

<p><u> Основные плюсы и минусы языка Java:</u></p>

<TABLE BORDER=1 ALIGN = "CENTER" BORDERCOLOR="GREY">

 <TR>
 <TH> Плюсы </TH>
 <TH> Минусы </TH>
 </TR>
<TR>
 <TH ALIGN="LEFT"> Большое глобальное сообщество. По данным компании Oracle, которая владеет и поддерживает язык, на Java пишут 12 млн разработчиков по всему миру и примерно 5 млн студентов. </TH>
 <TH ALIGN="LEFT"> Потребление памяти. Приложения на Java могут потреблять больше оперативной памяти по сравнению с некоторыми другими языками программирования. Это связано с автоматическим управлением памятью и использованием виртуальной машины Java. </TH>
 </TR>
<TR>
 <TH ALIGN="LEFT"> Безопасность. Язык сам по себе не делает код безопаснее, но в нем есть инструменты, которые позволяют защитить этот код. Например, в нем отсутствуют указатели и есть Security Manager, который позволяет настроить доступ к каждому приложению. </TH>
 <TH ALIGN="LEFT"> Производительность. Несмотря на то, что Java обеспечивает безопасность и переносимость, некоторые разработчики считают, что он может быть медленнее по сравнению с некоторыми другими языками, такими как C++ или C#. Это может быть проблемой в некоторых случаях, когда требуется максимальная производительность или низкая задержка. </TH>
 </TR>
<TR >
 <TH ALIGN="LEFT"> Востребованность. Спрос на Java-разработчиков в enterprise-сегменте очень велик, а зарплаты достаточные высокие. Кроме того, зарубежные компании активно набирают Java-разработчиков из России. </TH>
 <TH ALIGN="LEFT">Зависимость от JVM. Поскольку Java работает на виртуальной машине Java (JVM), приложения требуют наличия JVM для выполнения. Это может создавать проблемы, если необходимость в установке и поддержке JVM на целевых устройствах или серверах является преградой. </TH>
 </TR>
</TABLE>


<h2 id = "ex">Примеры кода</h2>
<div class="block1">
  <p>Код программы Hello, world! </p>
  <p>
  <p><span class="g">class</span> <span class="b">Hello World</span> {
  <p>
<p><span class="g">public static</span> <span class="r">void</span> <span class="b">main</span>(String[] args) {
  <p>
<p>System.<span class="g">out.println</span> (<span class="r">"Hello, world!"</span>);
  <p>
  <p> }
  <p> }
<p>
</div>
<div class="block2">
<p><img src="pict.jpeg" height="300" width="500" ></p>
</div>

<p>
<ins>Теги</ins>
  <ol style="column-count:4; text-align:justify;">
    <li>&lthtml&gt
    <li>&lttitle&gt
    <li>&lthead&gt
    <li>&ltbody&gt
    <li>&ltlink&gt
    <li>&ltaddress&gt
    <li> &ltdiv&gt
    <li>&ltp&gt
    <li>&lth1&gt
    <li>&lth2&gt
    <li>&ltdiv&gt
    <li>&ltol&gt
    <li>&ltli&gt
    <li>&lttable&gt  
    <li>&lttr&gt
    <li>&lttd&gt
    <li>&ltul&gt
    <li>&ltcaption&gt
    <li>&ltthead&gt
    <li>&lttbody&gt
    <li>&ltspan&gt
    <li>&ltimg&gt
    <li>&lta&gt
    <li>&ltth&gt
    <li>&lthr&gt
    <li>&lti&gt
    <li>&ltins&gt
    <li> &ltdoctype&gt
    <li>&ltb&gt
    <li>&ltblockquote&gt
    <li>&ltsmall&gt
    <li>&ltmeta&gt
  </ol>
</p>
<p>
  <ins>CSS свойства</ins>
  <ol style="column-count:4; text-align:justify;">
    <li>font-size
    <li>text-aligh
    <li>font-family
    <li>text-indent
    <li>padding
    <li>padding-left
    <li>padding-right
    <li>padding-bottom
    <li>padding-top
    <li>list-style-image
    <li>color
    <li>background
    <li>border
    <li>width
    <li>height
    <li>float
    <li>overflow
    <li>margin
    <li>border-collapse
    <li>text-transform
    <li>border-right
    <li>border-bottom
    <li>margin-left
    <li>font-stretch
    <li>border-bottom-left-radius
    <li>border-bottom-right-radius
    <li>border-top-left-radius
    <li>border-top-right-radius
    <li>border-radius
    <li>outline-color
    <li>outline-offset
    <li>outline-style
    <li>outline-width
    <li>opacity
    <li>text-shadow
    <li>column-count
    <li>text-decoration
    <li>text-decoration-color
    <li>text-decoration-style
    <li>margin-top
  </ol>
</p>
</body>
</html>